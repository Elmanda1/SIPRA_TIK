generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id_user            Int       @id @default(autoincrement())
  name               String    @db.VarChar(100)
  username           String    @db.VarChar(50)
  email              String    @unique @db.VarChar(255)
  password           String    @db.VarChar(100)
  role               Role      @default(mahasiswa)
  isVerified         Boolean   @default(false)
  verificationToken  String?   @db.VarChar(255)
  resetToken         String?   @db.VarChar(255)
  resetTokenExpiry   DateTime?
  createdAt          DateTime  @default(now())

  // Auth Relations
  sessions           Session[]

  // App Relations (Optional)
  barang             inven_barang[]  @relation("UserBarang")
  ruangan            inven_ruangan[] @relation("UserRuangan")
  pinjam             peminjaman[]    @relation("UserPinjam")
}

model inven_barang {
  id_barang   Int          @id @default(autoincrement())
  nama_barang String       @db.VarChar(255)
  jml_barang  Int
  lokasi      String?      @db.VarChar(100)
  status      statusInven
  id_user     Int?
  user        User?       @relation("UserBarang", fields: [id_user], references: [id_user])
  pinjam      peminjaman[] @relation("BarangPinjam")
}

model Session {
  id            Int      @id @default(autoincrement())
  userId        Int
  refreshToken  String   @db.VarChar(500)
  userAgent     String?  @db.VarChar(255)
  ipAddress     String?  @db.VarChar(100)
  createdAt     DateTime @default(now())
  expiresAt     DateTime

  user          User     @relation(fields: [userId], references: [id_user])
}

model inven_ruangan {
  id_ruangan   Int          @id @default(autoincrement())
  kode_ruangan String       @db.VarChar(255)
  status       statusInven
  id_user      Int?
  user         User?       @relation("UserRuangan", fields: [id_user], references: [id_user])
  pinjam       peminjaman[] @relation("RuanganPinjam")
}

model peminjaman {
  id_peminjaman        Int              @id @default(autoincrement())
  tanggal_pengajuan    DateTime         @default(now())
  tanggal_peminjaman   DateTime
  tanggal_pengembalian DateTime
  status               statusPeminjaman
  id_user              Int
  id_barang            Int?
  id_ruangan           Int?
  barang               inven_barang?    @relation("BarangPinjam", fields: [id_barang], references: [id_barang])
  ruangan              inven_ruangan?   @relation("RuanganPinjam", fields: [id_ruangan], references: [id_ruangan])
  user                 User            @relation("UserPinjam", fields: [id_user], references: [id_user])
}

enum Role {
  admin
  dosen
  mahasiswa
}

enum statusUser {
  active
  inactive
}

enum statusInven {
  tersedia
  dipinjam
}

enum statusPeminjaman {
  pending
  diterima
  ditolak
}
